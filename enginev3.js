// Import Puppeteer and filesystem
const puppeteer = require('puppeteer');
const path = require('path');
const createCsvWriter = require('csv-writer').createObjectCsvWriter;


// Utility functions
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

// Retry logic with exponential backoff
async function scrapePageWithRetry(page, url, maxRetries = 3) {
  for (let attempt = 1; attempt <= maxRetries; attempt++) {
    try {
      console.log(`Attempt ${attempt}: Loading ${url}`);
      await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });

      // Extract listings
      const data = await page.evaluate(() => {
        const listings = Array.from(document.querySelectorAll('.c411Listing'));
        return listings.map(listing => {
          const name = listing.querySelector('.c411ListedName')?.innerText.trim() || '';
          const address = listing.querySelector('.c411ListingGeo .adr')?.innerText.trim() || '';
          const phone = listing.querySelector('.c411Phone')?.innerText.trim() || '';
          return { name, address, phone };
        });
      });

      return data;
    } catch (err) {
      console.error(`❌ Attempt ${attempt} failed: ${err.message}`);
      if (attempt === maxRetries) {
        console.error(`❌ Skipping ${url} after ${maxRetries} attempts.`);
        return [];
      }
      const delay = 2000 * attempt;
      console.log(`⏳ Retrying in ${delay}ms...`);
      await sleep(delay);
    }
  }
}

(async () => {
  // Launch browser
  const browser = await puppeteer.launch({ headless: true, args: ['--no-sandbox'] });
  const page = await browser.newPage();

  // Bypass CSP and block unnecessary resources
  await page.setBypassCSP(true);
  await page.setRequestInterception(true);
  page.on('request', req => {
    const type = req.resourceType();
    if (['image', 'stylesheet', 'font'].includes(type)) req.abort();
    else req.continue();
  });

  // const letters = ['H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
  const letters = ['k', 'ka', 'ke', 'ki', 'ko', 'ku', 'kab', 'kac', 'kaca', 'kace', 'kaci', 'kaco', 'kacu', 'kad', 'kada', 'kade', 'kadi', 'kado', 'kadu', 'kae', 'kaea', 'kaee', 'kaei', 'kaeo', 'kaeu', 'kab', 'kaba', 'kabe', 'kabi', 'kabo', 'kabu', 'kac', 'kaca', 'kace', 'kaci', 'kaco', 'kacu', 'kad', 'kada', 'kade', 'kadi', 'kado', 'kadu', 'kae', 'kaea', 'kaee', 'kaei', 'kaeo', 'kaeu', 'kaf', 'kafa', 'kafe', 'kafi', 'kafo', 'kafu', 'kag', 'kaga', 'kage', 'kagi', 'kago', 'kagu', 'kah', 'kaha', 'kahe', 'kahi', 'kaho', 'kahu', 'kai', 'kaia', 'kaie', 'kaii', 'kaio', 'kaiu', 'kaj', 'kaja', 'kaje', 'kaji', 'kajo', 'kaju', 'kak', 'kaka', 'kake', 'kaki', 'kako', 'kaku', 'kal', 'kala', 'kale', 'kali', 'kalo', 'kalu', 'kam', 'kama', 'kame', 'kami', 'kamo', 'kamu', 'kan', 'kana', 'kane', 'kani', 'kano', 'kanu', 'kao', 'kaoa', 'kaoe', 'kaoi', 'kaoo', 'kaou', 'kap', 'kapa', 'kape', 'kapi', 'kapo', 'kapu', 'kaq', 'kaqa', 'kaqe', 'kaqi', 'kaqo', 'kaqu', 'kar', 'kara', 'kare', 'kari', 'karo', 'karu', 'kas', 'kasa', 'kase', 'kasi', 'kaso', 'kasu', 'kat', 'kata', 'kate', 'kati', 'kato', 'katu', 'kau', 'kaua', 'kaue', 'kaui', 'kauo', 'kauu', 'kav', 'kava', 'kave', 'kavi', 'kavo', 'kavu', 'kaw', 'kawa', 'kawe', 'kawi', 'kawo', 'kawu', 'kax', 'kaxa', 'kaxe', 'kaxi', 'kaxo', 'kaxu', 'kay', 'kaya', 'kaye', 'kayi', 'kayo', 'kayu', 'kaz', 'kaza', 'kaze', 'kazi', 'kazo', 'kazu',
    'keb', 'kec', 'keca', 'kece', 'keci', 'keco', 'kecu', 'ked', 'keda', 'kede', 'kedi', 'kedo', 'kedu', 'kee', 'keea', 'keee', 'keei', 'keeo', 'keeu', 'keb', 'keba', 'kebe', 'kebi', 'kebo', 'kebu', 'kec', 'keca', 'kece', 'keci', 'keco', 'kecu', 'ked', 'keda', 'kede', 'kedi', 'kedo', 'kedu', 'kee', 'keea', 'keee', 'keei', 'keeo', 'keeu', 'kef', 'kefa', 'kefe', 'kefi', 'kefo', 'kefu', 'keg', 'kega', 'kege', 'kegi', 'kego', 'kegu', 'keh', 'keha', 'kehe', 'kehi', 'keho', 'kehu', 'kei', 'keia', 'keie', 'keii', 'keio', 'keiu', 'kej', 'keja', 'keje', 'keji', 'kejo', 'keju', 'kek', 'keka', 'keke', 'keki', 'keko', 'keku', 'kel', 'kela', 'kele', 'keli', 'kelo', 'kelu', 'kem', 'kema', 'keme', 'kemi', 'kemo', 'kemu', 'ken', 'kena', 'kene', 'keni', 'keno', 'kenu', 'keo', 'keoa', 'keoe', 'keoi', 'keoo', 'keou', 'kep', 'kepa', 'kepe', 'kepi', 'kepo', 'kepu', 'keq', 'keqa', 'keqe', 'keqi', 'keqo', 'kequ', 'ker', 'kera', 'kere', 'keri', 'kero', 'keru', 'kes', 'kesa', 'kese', 'kesi', 'keso', 'kesu', 'ket', 'keta', 'kete', 'keti', 'keto', 'ketu', 'keu', 'keua', 'keue', 'keui', 'keuo', 'keuu', 'kev', 'keva', 'keve', 'kevi', 'kevo', 'kevu', 'kew', 'kewa', 'kewe', 'kewi', 'kewo', 'kewu', 'kex', 'kexa', 'kexe', 'kexi', 'kexo', 'kexu', 'key', 'keya', 'keye', 'keyi', 'keyo', 'keyu', 'kez', 'keza', 'keze', 'kezi', 'kezo', 'kezu',
    'kib', 'kic', 'kica', 'kice', 'kici', 'kico', 'kicu', 'kid', 'kida', 'kide', 'kidi', 'kido', 'kidu', 'kie', 'kiea', 'kiee', 'kiei', 'kieo', 'kieu', 'kib', 'kiba', 'kibe', 'kibi', 'kibo', 'kibu', 'kic', 'kica', 'kice', 'kici', 'kico', 'kicu', 'kid', 'kida', 'kide', 'kidi', 'kido', 'kidu', 'kie', 'kiea', 'kiee', 'kiei', 'kieo', 'kieu', 'kif', 'kifa', 'kife', 'kifi', 'kifo', 'kifu', 'kig', 'kiga', 'kige', 'kigi', 'kigo', 'kigu', 'kih', 'kiha', 'kihe', 'kihi', 'kiho', 'kihu', 'kii', 'kiia', 'kiie', 'kiii', 'kiio', 'kiiu', 'kij', 'kija', 'kije', 'kiji', 'kijo', 'kiju', 'kik', 'kika', 'kike', 'kiki', 'kiko', 'kiku', 'kil', 'kila', 'kile', 'kili', 'kilo', 'kilu', 'kim', 'kima', 'kime', 'kimi', 'kimo', 'kimu', 'kin', 'kina', 'kine', 'kini', 'kino', 'kinu', 'kio', 'kioa', 'kioe', 'kioi', 'kioo', 'kiou', 'kip', 'kipa', 'kipe', 'kipi', 'kipo', 'kipu', 'kiq', 'kiqa', 'kiqe', 'kiqi', 'kiqo', 'kiqu', 'kir', 'kira', 'kire', 'kiri', 'kiro', 'kiru', 'kis', 'kisa', 'kise', 'kisi', 'kiso', 'kisu', 'kit', 'kita', 'kite', 'kiti', 'kito', 'kitu', 'kiu', 'kiua', 'kiue', 'kiui', 'kiuo', 'kiuu', 'kiv', 'kiva', 'kive', 'kivi', 'kivo', 'kivu', 'kiw', 'kiwa', 'kiwe', 'kiwi', 'kiwo', 'kiwu', 'kix', 'kixa', 'kixe', 'kixi', 'kixo', 'kixu', 'kiy', 'kiya', 'kiye', 'kiyi', 'kiyo', 'kiyu', 'kiz', 'kiza', 'kize', 'kizi', 'kizo', 'kizu',
    'kob', 'koc', 'koca', 'koce', 'koci', 'koco', 'kocu', 'kod', 'koda', 'kode', 'kodi', 'kodo', 'kodu', 'koe', 'koea', 'koee', 'koei', 'koeo', 'koeu', 'kob', 'koba', 'kobe', 'kobi', 'kobo', 'kobu', 'koc', 'koca', 'koce', 'koci', 'koco', 'kocu', 'kod', 'koda', 'kode', 'kodi', 'kodo', 'kodu', 'koe', 'koea', 'koee', 'koei', 'koeo', 'koeu', 'kof', 'kofa', 'kofe', 'kofi', 'kofo', 'kofu', 'kog', 'koga', 'koge', 'kogi', 'kogo', 'kogu', 'koh', 'koha', 'kohe', 'kohi', 'koho', 'kohu', 'koi', 'koia', 'koie', 'koii', 'koio', 'koiu', 'koj', 'koja', 'koje', 'koji', 'kojo', 'koju', 'kok', 'koka', 'koke', 'koki', 'koko', 'koku', 'kol', 'kola', 'kole', 'koli', 'kolo', 'kolu', 'kom', 'koma', 'kome', 'komi', 'komo', 'komu', 'kon', 'kona', 'kone', 'koni', 'kono', 'konu', 'koo', 'kooa', 'kooe', 'kooi', 'kooo', 'koou', 'kop', 'kopa', 'kope', 'kopi', 'kopo', 'kopu', 'koq', 'koqa', 'koqe', 'koqi', 'koqo', 'koqu', 'kor', 'kora', 'kore', 'kori', 'koro', 'koru', 'kos', 'kosa', 'kose', 'kosi', 'koso', 'kosu', 'kot', 'kota', 'kote', 'koti', 'koto', 'kotu', 'kou', 'koua', 'koue', 'koui', 'kouo', 'kouu', 'kov', 'kova', 'kove', 'kovi', 'kovo', 'kovu', 'kow', 'kowa', 'kowe', 'kowi', 'kowo', 'kowu', 'kox', 'koxa', 'koxe', 'koxi', 'koxo', 'koxu', 'koy', 'koya', 'koye', 'koyi', 'koyo', 'koyu', 'koz', 'koza', 'koze', 'kozi', 'kozo', 'kozu',
    'kub', 'kuc', 'kuca', 'kuce', 'kuci', 'kuco', 'kucu', 'kud', 'kuda', 'kude', 'kudi', 'kudo', 'kudu', 'kue', 'kuea', 'kuee', 'kuei', 'kueo', 'kueu', 'kub', 'kuba', 'kube', 'kubi', 'kubo', 'kubu', 'kuc', 'kuca', 'kuce', 'kuci', 'kuco', 'kucu', 'kud', 'kuda', 'kude', 'kudi', 'kudo', 'kudu', 'kue', 'kuea', 'kuee', 'kuei', 'kueo', 'kueu', 'kuf', 'kufa', 'kufe', 'kufi', 'kufo', 'kufu', 'kug', 'kuga', 'kuge', 'kugi', 'kugo', 'kugu', 'kuh', 'kuha', 'kuhe', 'kuhi', 'kuho', 'kuhu', 'kui', 'kuia', 'kuie', 'kuii', 'kuio', 'kuiu', 'kuj', 'kuja', 'kuje', 'kuji', 'kujo', 'kuju', 'kuk', 'kuka', 'kuke', 'kuki', 'kuko', 'kuku', 'kul', 'kula', 'kule', 'kuli', 'kulo', 'kulu', 'kum', 'kuma', 'kume', 'kumi', 'kumo', 'kumu', 'kun', 'kuna', 'kune', 'kuni', 'kuno', 'kunu', 'kuo', 'kuoa', 'kuoe', 'kuoi', 'kuoo', 'kuou', 'kup', 'kupa', 'kupe', 'kupi', 'kupo', 'kupu', 'kuq', 'kuqa', 'kuqe', 'kuqi', 'kuqo', 'kuqu', 'kur', 'kura', 'kure', 'kuri', 'kuro', 'kuru', 'kus', 'kusa', 'kuse', 'kusi', 'kuso', 'kusu', 'kut', 'kuta', 'kute', 'kuti', 'kuto', 'kutu', 'kuu', 'kuua', 'kuue', 'kuui', 'kuuo', 'kuuu', 'kuv', 'kuva', 'kuve', 'kuvi', 'kuvo', 'kuvu', 'kuw', 'kuwa', 'kuwe', 'kuwi', 'kuwo', 'kuwu', 'kux', 'kuxa', 'kuxe', 'kuxi', 'kuxo', 'kuxu', 'kuy', 'kuya', 'kuye', 'kuyi', 'kuyo', 'kuyu', 'kuz', 'kuza', 'kuze', 'kuzi', 'kuzo', 'kuzu',
    'l', 'la', 'le', 'li', 'lo', 'lu', 'lab', 'lac', 'laca', 'lace', 'laci', 'laco', 'lacu', 'lad', 'lada', 'lade', 'ladi', 'lado', 'ladu', 'lae', 'laea', 'laee', 'laei', 'laeo', 'laeu', 'lab', 'laba', 'labe', 'labi', 'labo', 'labu', 'lac', 'laca', 'lace', 'laci', 'laco', 'lacu', 'lad', 'lada', 'lade', 'ladi', 'lado', 'ladu', 'lae', 'laea', 'laee', 'laei', 'laeo', 'laeu', 'laf', 'lafa', 'lafe', 'lafi', 'lafo', 'lafu', 'lag', 'laga', 'lage', 'lagi', 'lago', 'lagu', 'lah', 'laha', 'lahe', 'lahi', 'laho', 'lahu', 'lai', 'laia', 'laie', 'lalii', 'laio', 'laiu', 'laj', 'laja', 'laje', 'laji', 'lajo', 'laju', 'lal', 'lala', 'lale', 'lali', 'lalo', 'lalu', 'lam', 'lama', 'lame', 'lami', 'lamo', 'lamu', 'lan', 'lana', 'lane', 'lani', 'lano', 'lanu', 'lao', 'laoa', 'laoe', 'laoi', 'laoo', 'laou', 'lap', 'lapa', 'lape', 'lapi', 'lapo', 'lapu', 'laq', 'laqa', 'laqe', 'laqi', 'laqo', 'laqu', 'lar', 'lara', 'lare', 'lari', 'laro', 'laru', 'las', 'lasa', 'lase', 'lasi', 'laso', 'lasu', 'lat', 'lata', 'late', 'lati', 'lato', 'latu', 'lau', 'laua', 'laue', 'laui', 'lauo', 'lauu', 'lav', 'lava', 'lave', 'lavi', 'lavo', 'lavu', 'law', 'lawa', 'lawe', 'lawi', 'lawo', 'lawu', 'lax', 'laxa', 'laxe', 'laxi', 'laxo', 'laxu', 'lay', 'laya', 'laye', 'layi', 'layo', 'layu', 'laz', 'laza', 'laze', 'lazi', 'lazo', 'lazu',
    'leb', 'lec', 'leca', 'lece', 'leci', 'leco', 'lecu', 'led', 'leda', 'lede', 'ledi', 'ledo', 'ledu', 'lee', 'leee', 'leee', 'leei', 'leeo', 'leeu', 'leb', 'leba', 'lebe', 'lebi', 'lebo', 'lebu', 'lec', 'leca', 'lece', 'leci', 'leco', 'lecu', 'led', 'leda', 'lede', 'ledi', 'ledo', 'ledu', 'lee', 'leee', 'leee', 'leei', 'leeo', 'leeu', 'lef', 'lefa', 'lefe', 'lefi', 'lefo', 'lefu', 'leg', 'lega', 'lege', 'legi', 'lego', 'legu', 'leh', 'leha', 'lehe', 'lehi', 'leho', 'lehu', 'lei', 'leia', 'leie', 'lelii', 'leio', 'leiu', 'lej', 'leja', 'leje', 'leji', 'lejo', 'leju', 'lel', 'lela', 'lele', 'leli', 'lelo', 'lelu', 'lem', 'lema', 'leme', 'lemi', 'lemo', 'lemu', 'len', 'lena', 'lene', 'leni', 'leno', 'lenu', 'leo', 'leoa', 'leoe', 'leoi', 'leoo', 'leou', 'lep', 'lepa', 'lepe', 'lepi', 'lepo', 'lepu', 'leq', 'leqa', 'leqe', 'leqi', 'leqo', 'lequ', 'ler', 'lera', 'lere', 'leri', 'lero', 'leru', 'les', 'lesa', 'lese', 'lesi', 'leso', 'lesu', 'let', 'leta', 'lete', 'leti', 'leto', 'letu', 'leu', 'leua', 'leue', 'leui', 'leuo', 'leuu', 'lev', 'leva', 'leve', 'levi', 'levo', 'levu', 'lew', 'lewa', 'lewe', 'lewi', 'lewo', 'lewu', 'lex', 'lexa', 'lexe', 'lexi', 'lexo', 'lexu', 'ley', 'leya', 'leye', 'leyi', 'leyo', 'leyu', 'lez', 'leza', 'leze', 'lezi', 'lezo', 'lezu',
    'lib', 'lic', 'lica', 'lice', 'lici', 'lico', 'licu', 'lid', 'lida', 'lide', 'lidi', 'lido', 'lidu', 'lie', 'liea', 'liee', 'liei', 'lieo', 'lieu', 'lib', 'liba', 'libe', 'libi', 'libo', 'libu', 'lic', 'lica', 'lice', 'lici', 'lico', 'licu', 'lid', 'lida', 'lide', 'lidi', 'lido', 'lidu', 'lie', 'liea', 'liee', 'liei', 'lieo', 'lieu', 'lif', 'lifa', 'life', 'lifi', 'lifo', 'lifu', 'lig', 'liga', 'lige', 'ligi', 'ligo', 'ligu', 'lih', 'liha', 'lihe', 'lihi', 'liho', 'lihu', 'lii', 'liia', 'liie', 'lilii', 'liio', 'liiu', 'lij', 'lija', 'lije', 'liji', 'lijo', 'liju', 'lil', 'lila', 'lile', 'lili', 'lilo', 'lilu', 'lim', 'lima', 'lime', 'limi', 'limo', 'limu', 'lin', 'lina', 'line', 'lini', 'lino', 'linu', 'lio', 'lioa', 'lioe', 'lioi', 'lioo', 'liou', 'lip', 'lipa', 'lipe', 'lipi', 'lipo', 'lipu', 'liq', 'liqa', 'liqe', 'liqi', 'liqo', 'liqu', 'lir', 'lira', 'lire', 'liri', 'liro', 'liru', 'lis', 'lisa', 'lise', 'lisi', 'liso', 'lisu', 'lit', 'lita', 'lite', 'liti', 'lito', 'litu', 'liu', 'liua', 'liue', 'liui', 'liuo', 'liuu', 'liv', 'liva', 'live', 'livi', 'livo', 'livu', 'liw', 'liwa', 'liwe', 'liwi', 'liwo', 'liwu', 'lix', 'lixa', 'lixe', 'lixi', 'lixo', 'lixu', 'liy', 'liya', 'liye', 'liyi', 'liyo', 'liyu', 'liz', 'liza', 'lize', 'lizi', 'lizo', 'lizu',
    'lob', 'loc', 'loca', 'loce', 'loci', 'loco', 'locu', 'lod', 'loda', 'lode', 'lodi', 'lodo', 'lodu', 'loe', 'loea', 'loee', 'loei', 'loeo', 'loeu', 'lob', 'loba', 'lobe', 'lobi', 'lobo', 'lobu', 'loc', 'loca', 'loce', 'loci', 'loco', 'locu', 'lod', 'loda', 'lode', 'lodi', 'lodo', 'lodu', 'loe', 'loea', 'loee', 'loei', 'loeo', 'loeu', 'lof', 'lofa', 'lofe', 'lofi', 'lofo', 'lofu', 'log', 'loga', 'loge', 'logi', 'logo', 'logu', 'loh', 'loha', 'lohe', 'lohi', 'loho', 'lohu', 'loi', 'loia', 'loie', 'lollii', 'loio', 'loiu', 'loj', 'loja', 'loje', 'loji', 'lojo', 'loju', 'lol', 'lola', 'lole', 'loli', 'lolo', 'lolu', 'lom', 'loma', 'lome', 'lomi', 'lomo', 'lomu', 'lon', 'lona', 'lone', 'loni', 'lono', 'lonu', 'loo', 'looa', 'looe', 'looi', 'looo', 'loou', 'lop', 'lopa', 'lope', 'lopi', 'lopo', 'lopu', 'loq', 'loqa', 'loqe', 'loqi', 'loqo', 'loqu', 'lor', 'lora', 'lore', 'lori', 'loro', 'loru', 'los', 'losa', 'lose', 'losi', 'loso', 'losu', 'lot', 'lota', 'lote', 'loti', 'loto', 'lotu', 'lou', 'loua', 'loue', 'loui', 'louo', 'louu', 'lov', 'lova', 'love', 'lovi', 'lovo', 'lovu', 'low', 'lowa', 'lowe', 'lowi', 'lowo', 'lowu', 'lox', 'loxa', 'loxe', 'loxi', 'loxo', 'loxu', 'loy', 'loya', 'loye', 'loyi', 'loyo', 'loyu', 'loz', 'loza', 'loze', 'lozi', 'lozo', 'lozu',
    'lub', 'luc', 'luca', 'luce', 'luci', 'luco', 'lucu', 'lud', 'luda', 'lude', 'ludi', 'ludo', 'ludu', 'lue', 'luea', 'luee', 'luei', 'lueo', 'lueu', 'lub', 'luba', 'lube', 'lubi', 'lubo', 'lubu', 'luc', 'luca', 'luce', 'luci', 'luco', 'lucu', 'lud', 'luda', 'lude', 'ludi', 'ludo', 'ludu', 'lue', 'luea', 'luee', 'luei', 'lueo', 'lueu', 'luf', 'lufa', 'lufe', 'lufi', 'lufo', 'lufu', 'lug', 'luga', 'luge', 'lugi', 'lugo', 'lugu', 'luh', 'luha', 'luhe', 'luhi', 'luho', 'luhu', 'lui', 'luia', 'luie', 'lulii', 'luio', 'luiu', 'luj', 'luja', 'luje', 'luji', 'lujo', 'luju', 'lul', 'lula', 'lule', 'luli', 'lulo', 'lulu', 'lum', 'luma', 'lume', 'lumi', 'lumo', 'lumu', 'lun', 'luna', 'lune', 'luni', 'luno', 'lunu', 'luo', 'luoa', 'luoe', 'luoi', 'luoo', 'luou', 'lup', 'lupa', 'lupe', 'lupi', 'lupo', 'lupu', 'luq', 'luqa', 'luqe', 'luqi', 'luqo', 'luqu', 'lur', 'lura', 'lure', 'luri', 'luro', 'luru', 'lus', 'lusa', 'luse', 'lusi', 'luso', 'lusu', 'lut', 'luta', 'lute', 'luti', 'luto', 'lutu', 'luu', 'luua', 'luue', 'luui', 'luuo', 'luuu', 'luv', 'luva', 'luve', 'luvi', 'luvo', 'luvu', 'luw', 'luwa', 'luwe', 'luwi', 'luwo', 'luwu', 'lux', 'luxa', 'luxe', 'luxi', 'luxo', 'luxu', 'luy', 'luya', 'luye', 'luyi', 'luyo', 'luyu', 'luz', 'luza', 'luze', 'luzi', 'luzo', 'luzu',
    'n', 'na', 'ne', 'ni', 'no', 'nu', 'nab', 'nac', 'naca', 'nace', 'naci', 'naco', 'nacu', 'nad', 'nada', 'nade', 'nadi', 'nado', 'nadu', 'nae', 'naea', 'naee', 'naei', 'naeo', 'naeu', 'nab', 'naba', 'nabe', 'nabi', 'nabo', 'nabu', 'nac', 'naca', 'nace', 'naci', 'naco', 'nacu', 'nad', 'nada', 'nade', 'nadi', 'nado', 'nadu', 'nae', 'naea', 'naee', 'naei', 'naeo', 'naeu', 'naf', 'nafa', 'nafe', 'nafi', 'nafo', 'nafu', 'nag', 'naga', 'nage', 'nagi', 'nago', 'nagu', 'nah', 'naha', 'nahe', 'nahi', 'naho', 'nahu', 'nai', 'naia', 'naie', 'naii', 'naio', 'nain', 'naj', 'naja', 'naje', 'naji', 'najo', 'naju', 'nan', 'nana', 'nane', 'nani', 'nano', 'nanu', 'nal', 'nala', 'nale', 'nali', 'nalo', 'nalu', 'nam', 'nama', 'name', 'nami', 'namo', 'namu', 'nan', 'nana', 'nane', 'nani', 'nano', 'nanu', 'nao', 'naoa', 'naoe', 'naoi', 'naoo', 'naou', 'nap', 'napa', 'nape', 'napi', 'napo', 'napu', 'naq', 'naqa', 'naqe', 'naqi', 'naqo', 'naqu', 'nar', 'nara', 'nare', 'nari', 'naro', 'naru', 'nas', 'nasa', 'nase', 'nasi', 'naso', 'nasu', 'nat', 'nata', 'nate', 'nati', 'nato', 'natu', 'nau', 'naua', 'naue', 'naui', 'nauo', 'nauu', 'nav', 'nava', 'nave', 'navi', 'navo', 'navu', 'naw', 'nawa', 'nawe', 'nawi', 'nawo', 'nawu', 'nax', 'naxa', 'naxe', 'naxi', 'naxo', 'naxu', 'nay', 'naya', 'naye', 'nayi', 'nayo', 'nayu', 'naz', 'naza', 'naze', 'nazi', 'nazo', 'nazu',
    'neb', 'nec', 'neca', 'nece', 'neci', 'neco', 'necu', 'ned', 'neda', 'nede', 'nedi', 'nedo', 'nedu', 'nee', 'neea', 'neee', 'neei', 'neeo', 'neeu', 'neb', 'neba', 'nebe', 'nebi', 'nebo', 'nebu', 'nec', 'neca', 'nece', 'neci', 'neco', 'necu', 'ned', 'neda', 'nede', 'nedi', 'nedo', 'nedu', 'nee', 'neea', 'neee', 'neei', 'neeo', 'neeu', 'nef', 'nefa', 'nefe', 'nefi', 'nefo', 'nefu', 'neg', 'nega', 'nege', 'negi', 'nego', 'negu', 'neh', 'neha', 'nehe', 'nehi', 'neho', 'nehu', 'nei', 'neia', 'neie', 'neii', 'neio', 'nein', 'nej', 'neja', 'neje', 'neji', 'nejo', 'neju', 'nen', 'nena', 'nene', 'neni', 'neno', 'nenu', 'nel', 'nela', 'nele', 'neli', 'nelo', 'nelu', 'nem', 'nema', 'neme', 'nemi', 'nemo', 'nemu', 'nen', 'nena', 'nene', 'neni', 'neno', 'nenu', 'neo', 'neoa', 'neoe', 'neoi', 'neoo', 'neou', 'nep', 'nepa', 'nepe', 'nepi', 'nepo', 'nepu', 'neq', 'neqa', 'neqe', 'neqi', 'neqo', 'nequ', 'ner', 'nera', 'nere', 'neri', 'nero', 'neru', 'nes', 'nesa', 'nese', 'nesi', 'neso', 'nesu', 'net', 'neta', 'nete', 'neti', 'neto', 'netu', 'neu', 'neua', 'neue', 'neui', 'neuo', 'neuu', 'nev', 'neva', 'neve', 'nevi', 'nevo', 'nevu', 'new', 'newa', 'newe', 'newi', 'newo', 'newu', 'nex', 'nexa', 'nexe', 'nexi', 'nexo', 'nexu', 'ney', 'neya', 'neye', 'neyi', 'neyo', 'neyu', 'nez', 'neza', 'neze', 'nezi', 'nezo', 'nezu',
    'nib', 'nic', 'nica', 'nice', 'nici', 'nico', 'nicu', 'nid', 'nida', 'nide', 'nidi', 'nido', 'nidu', 'nie', 'niea', 'niee', 'niei', 'nieo', 'nieu', 'nib', 'niba', 'nibe', 'nibi', 'nibo', 'nibu', 'nic', 'nica', 'nice', 'nici', 'nico', 'nicu', 'nid', 'nida', 'nide', 'nidi', 'nido', 'nidu', 'nie', 'niea', 'niee', 'niei', 'nieo', 'nieu', 'nif', 'nifa', 'nife', 'nifi', 'nifo', 'nifu', 'nig', 'niga', 'nige', 'nigi', 'nigo', 'nigu', 'nih', 'niha', 'nihe', 'nihi', 'niho', 'nihu', 'nii', 'niia', 'niie', 'niii', 'niio', 'niin', 'nij', 'nija', 'nije', 'niji', 'nijo', 'niju', 'nin', 'nina', 'nine', 'nini', 'nino', 'ninu', 'nil', 'nila', 'nile', 'nili', 'nilo', 'nilu', 'nim', 'nima', 'nime', 'nimi', 'nimo', 'nimu', 'nin', 'nina', 'nine', 'nini', 'nino', 'ninu', 'nio', 'nioa', 'nioe', 'nioi', 'nioo', 'niou', 'nip', 'nipa', 'nipe', 'nipi', 'nipo', 'nipu', 'niq', 'niqa', 'niqe', 'niqi', 'niqo', 'niqu', 'nir', 'nira', 'nire', 'niri', 'niro', 'niru', 'nis', 'nisa', 'nise', 'nisi', 'niso', 'nisu', 'nit', 'nita', 'nite', 'niti', 'nito', 'nitu', 'niu', 'niua', 'niue', 'niui', 'niuo', 'niuu', 'niv', 'niva', 'nive', 'nivi', 'nivo', 'nivu', 'niw', 'niwa', 'niwe', 'niwi', 'niwo', 'niwu', 'nix', 'nixa', 'nixe', 'nixi', 'nixo', 'nixu', 'niy', 'niya', 'niye', 'niyi', 'niyo', 'niyu', 'niz', 'niza', 'nize', 'nizi', 'nizo', 'nizu',
    'nob', 'noc', 'noca', 'noce', 'noci', 'noco', 'nocu', 'nod', 'noda', 'node', 'nodi', 'nodo', 'nodu', 'noe', 'noea', 'noee', 'noei', 'noeo', 'noeu', 'nob', 'noba', 'nobe', 'nobi', 'nobo', 'nobu', 'noc', 'noca', 'noce', 'noci', 'noco', 'nocu', 'nod', 'noda', 'node', 'nodi', 'nodo', 'nodu', 'noe', 'noea', 'noee', 'noei', 'noeo', 'noeu', 'nof', 'nofa', 'nofe', 'nofi', 'nofo', 'nofu', 'nog', 'noga', 'noge', 'nogi', 'nogo', 'nogu', 'noh', 'noha', 'nohe', 'nohi', 'noho', 'nohu', 'noi', 'noia', 'noie', 'noii', 'noio', 'noin', 'noj', 'noja', 'noje', 'noji', 'nojo', 'noju', 'non', 'nona', 'none', 'noni', 'nono', 'nonu', 'nol', 'nola', 'nole', 'noli', 'nolo', 'nolu', 'nom', 'noma', 'nome', 'nomi', 'nomo', 'nomu', 'non', 'nona', 'none', 'noni', 'nono', 'nonu', 'noo', 'nooa', 'nooe', 'nooi', 'nooo', 'noou', 'nop', 'nopa', 'nope', 'nopi', 'nopo', 'nopu', 'noq', 'noqa', 'noqe', 'noqi', 'noqo', 'noqu', 'nor', 'nora', 'nore', 'nori', 'noro', 'noru', 'nos', 'nosa', 'nose', 'nosi', 'noso', 'nosu', 'not', 'nota', 'note', 'noti', 'noto', 'notu', 'nou', 'noua', 'noue', 'noui', 'nouo', 'nouu', 'nov', 'nova', 'nove', 'novi', 'novo', 'novu', 'now', 'nowa', 'nowe', 'nowi', 'nowo', 'nowu', 'nox', 'noxa', 'noxe', 'noxi', 'noxo', 'noxu', 'noy', 'noya', 'noye', 'noyi', 'noyo', 'noyu', 'noz', 'noza', 'noze', 'nozi', 'nozo', 'nozu',
    'nub', 'nuc', 'nuca', 'nuce', 'nuci', 'nuco', 'nucu', 'nud', 'nuda', 'nude', 'nudi', 'nudo', 'nudu', 'nue', 'nuea', 'nuee', 'nuei', 'nueo', 'nueu', 'nub', 'nuba', 'nube', 'nubi', 'nubo', 'nubu', 'nuc', 'nuca', 'nuce', 'nuci', 'nuco', 'nucu', 'nud', 'nuda', 'nude', 'nudi', 'nudo', 'nudu', 'nue', 'nuea', 'nuee', 'nuei', 'nueo', 'nueu', 'nuf', 'nufa', 'nufe', 'nufi', 'nufo', 'nufu', 'nug', 'nuga', 'nuge', 'nugi', 'nugo', 'nugu', 'nuh', 'nuha', 'nuhe', 'nuhi', 'nuho', 'nuhu', 'nui', 'nuia', 'nuie', 'nuii', 'nuio', 'nuin', 'nuj', 'nuja', 'nuje', 'nuji', 'nujo', 'nuju', 'nun', 'nuna', 'nune', 'nuni', 'nuno', 'nunu', 'nul', 'nula', 'nule', 'nuli', 'nulo', 'nulu', 'num', 'numa', 'nume', 'numi', 'numo', 'numu', 'nun', 'nuna', 'nune', 'nuni', 'nuno', 'nunu', 'nuo', 'nuoa', 'nuoe', 'nuoi', 'nuoo', 'nuou', 'nup', 'nupa', 'nupe', 'nupi', 'nupo', 'nupu', 'nuq', 'nuqa', 'nuqe', 'nuqi', 'nuqo', 'nuqu', 'nur', 'nura', 'nure', 'nuri', 'nuro', 'nuru', 'nus', 'nusa', 'nuse', 'nusi', 'nuso', 'nusu', 'nut', 'nuta', 'nute', 'nuti', 'nuto', 'nutu', 'nuu', 'nuua', 'nuue', 'nuui', 'nuuo', 'nuuu', 'nuv', 'nuva', 'nuve', 'nuvi', 'nuvo', 'nuvu', 'nuw', 'nuwa', 'nuwe', 'nuwi', 'nuwo', 'nuwu', 'nux', 'nuxa', 'nuxe', 'nuxi', 'nuxo', 'nuxu', 'nuy', 'nuya', 'nuye', 'nuyi', 'nuyo', 'nuyu', 'nuz', 'nuza', 'nuze', 'nuzi', 'nuzo', 'nuzu',
    'p', 'pa', 'pe', 'pi', 'po', 'pu', 'pab', 'pac', 'paca', 'pace', 'paci', 'paco', 'pacu', 'pad', 'pada', 'pade', 'padi', 'pado', 'padu', 'pae', 'paea', 'paee', 'paei', 'paeo', 'paeu', 'pab', 'paba', 'pabe', 'pabi', 'pabo', 'pabu', 'pac', 'paca', 'pace', 'paci', 'paco', 'pacu', 'pad', 'pada', 'pade', 'padi', 'pado', 'padu', 'pae', 'paea', 'paee', 'paei', 'paeo', 'paeu', 'paf', 'pafa', 'pafe', 'pafi', 'pafo', 'pafu', 'pag', 'paga', 'page', 'pagi', 'pago', 'pagu', 'pah', 'paha', 'pahe', 'pahi', 'paho', 'pahu', 'pai', 'paia', 'paie', 'paii', 'paio', 'paiu', 'paj', 'paja', 'paje', 'paji', 'pajo', 'paju', 'pap', 'papa', 'pape', 'papi', 'papo', 'papu', 'pal', 'pala', 'pale', 'pali', 'palo', 'palu', 'pam', 'pama', 'pame', 'pami', 'pamo', 'pamu', 'pan', 'pana', 'pane', 'pani', 'pano', 'panu', 'pao', 'paoa', 'paoe', 'paoi', 'paoo', 'paou', 'pap', 'papa', 'pape', 'papi', 'papo', 'papu', 'paq', 'paqa', 'paqe', 'paqi', 'paqo', 'paqu', 'par', 'para', 'pare', 'pari', 'paro', 'paru', 'pas', 'pasa', 'pase', 'pasi', 'paso', 'pasu', 'pat', 'pata', 'pate', 'pati', 'pato', 'patu', 'pau', 'paua', 'paue', 'paui', 'pauo', 'pauu', 'pav', 'pava', 'pave', 'pavi', 'pavo', 'pavu', 'paw', 'pawa', 'pawe', 'pawi', 'pawo', 'pawu', 'pax', 'paxa', 'paxe', 'paxi', 'paxo', 'paxu', 'pay', 'paya', 'paye', 'payi', 'payo', 'payu', 'paz', 'paza', 'paze', 'pazi', 'pazo', 'pazu',
    'peb', 'pec', 'peca', 'pece', 'peci', 'peco', 'pecu', 'ped', 'peda', 'pede', 'pedi', 'pedo', 'pedu', 'pee', 'peea', 'peee', 'peei', 'peeo', 'peeu', 'peb', 'peba', 'pebe', 'pebi', 'pebo', 'pebu', 'pec', 'peca', 'pece', 'peci', 'peco', 'pecu', 'ped', 'peda', 'pede', 'pedi', 'pedo', 'pedu', 'pee', 'peea', 'peee', 'peei', 'peeo', 'peeu', 'pef', 'pefa', 'pefe', 'pefi', 'pefo', 'pefu', 'peg', 'pega', 'pege', 'pegi', 'pego', 'pegu', 'peh', 'peha', 'pehe', 'pehi', 'peho', 'pehu', 'pei', 'peia', 'peie', 'peii', 'peio', 'peiu', 'pej', 'peja', 'peje', 'peji', 'pejo', 'peju', 'pep', 'pepa', 'pepe', 'pepi', 'pepo', 'pepu', 'pel', 'pela', 'pele', 'peli', 'pelo', 'pelu', 'pem', 'pema', 'peme', 'pemi', 'pemo', 'pemu', 'pen', 'pena', 'pene', 'peni', 'peno', 'penu', 'peo', 'peoa', 'peoe', 'peoi', 'peoo', 'peou', 'pep', 'pepa', 'pepe', 'pepi', 'pepo', 'pepu', 'peq', 'peqa', 'peqe', 'peqi', 'peqo', 'pequ', 'per', 'pera', 'pere', 'peri', 'pero', 'peru', 'pes', 'pesa', 'pese', 'pesi', 'peso', 'pesu', 'pet', 'peta', 'pete', 'peti', 'peto', 'petu', 'peu', 'peua', 'peue', 'peui', 'peuo', 'peuu', 'pev', 'peva', 'peve', 'pevi', 'pevo', 'pevu', 'pew', 'pewa', 'pewe', 'pewi', 'pewo', 'pewu', 'pex', 'pexa', 'pexe', 'pexi', 'pexo', 'pexu', 'pey', 'peya', 'peye', 'peyi', 'peyo', 'peyu', 'pez', 'peza', 'peze', 'pezi', 'pezo', 'pezu',
    'pib', 'pic', 'pica', 'pice', 'pici', 'pico', 'picu', 'pid', 'pida', 'pide', 'pidi', 'pido', 'pidu', 'pie', 'piea', 'piee', 'piei', 'pieo', 'pieu', 'pib', 'piba', 'pibe', 'pibi', 'pibo', 'pibu', 'pic', 'pica', 'pice', 'pici', 'pico', 'picu', 'pid', 'pida', 'pide', 'pidi', 'pido', 'pidu', 'pie', 'piea', 'piee', 'piei', 'pieo', 'pieu', 'pif', 'pifa', 'pife', 'pifi', 'pifo', 'pifu', 'pig', 'piga', 'pige', 'pigi', 'pigo', 'pigu', 'pih', 'piha', 'pihe', 'pihi', 'piho', 'pihu', 'pii', 'piia', 'piie', 'piii', 'piio', 'piiu', 'pij', 'pija', 'pije', 'piji', 'pijo', 'piju', 'pip', 'pipa', 'pipe', 'pipi', 'pipo', 'pipu', 'pil', 'pila', 'pile', 'pili', 'pilo', 'pilu', 'pim', 'pima', 'pime', 'pimi', 'pimo', 'pimu', 'pin', 'pina', 'pine', 'pini', 'pino', 'pinu', 'pio', 'pioa', 'pioe', 'pioi', 'pioo', 'piou', 'pip', 'pipa', 'pipe', 'pipi', 'pipo', 'pipu', 'piq', 'piqa', 'piqe', 'piqi', 'piqo', 'piqu', 'pir', 'pira', 'pire', 'piri', 'piro', 'piru', 'pis', 'pisa', 'pise', 'pisi', 'piso', 'pisu', 'pit', 'pita', 'pite', 'piti', 'pito', 'pitu', 'piu', 'piua', 'piue', 'piui', 'piuo', 'piuu', 'piv', 'piva', 'pive', 'pivi', 'pivo', 'pivu', 'piw', 'piwa', 'piwe', 'piwi', 'piwo', 'piwu', 'pix', 'pixa', 'pixe', 'pixi', 'pixo', 'pixu', 'piy', 'piya', 'piye', 'piyi', 'piyo', 'piyu', 'piz', 'piza', 'pize', 'pizi', 'pizo', 'pizu',
    'pob', 'poc', 'poca', 'poce', 'poci', 'poco', 'pocu', 'pod', 'poda', 'pode', 'podi', 'podo', 'podu', 'poe', 'poea', 'poee', 'poei', 'poeo', 'poeu', 'pob', 'poba', 'pobe', 'pobi', 'pobo', 'pobu', 'poc', 'poca', 'poce', 'poci', 'poco', 'pocu', 'pod', 'poda', 'pode', 'podi', 'podo', 'podu', 'poe', 'poea', 'poee', 'poei', 'poeo', 'poeu', 'pof', 'pofa', 'pofe', 'pofi', 'pofo', 'pofu', 'pog', 'poga', 'poge', 'pogi', 'pogo', 'pogu', 'poh', 'poha', 'pohe', 'pohi', 'poho', 'pohu', 'poi', 'poia', 'poie', 'poii', 'poio', 'poiu', 'poj', 'poja', 'poje', 'poji', 'pojo', 'poju', 'pop', 'popa', 'pope', 'popi', 'popo', 'popu', 'pol', 'pola', 'pole', 'poli', 'polo', 'polu', 'pom', 'poma', 'pome', 'pomi', 'pomo', 'pomu', 'pon', 'pona', 'pone', 'poni', 'pono', 'ponu', 'poo', 'pooa', 'pooe', 'pooi', 'pooo', 'poou', 'pop', 'popa', 'pope', 'popi', 'popo', 'popu', 'poq', 'poqa', 'poqe', 'poqi', 'poqo', 'poqu', 'por', 'pora', 'pore', 'pori', 'poro', 'poru', 'pos', 'posa', 'pose', 'posi', 'poso', 'posu', 'pot', 'pota', 'pote', 'poti', 'poto', 'potu', 'pou', 'poua', 'poue', 'poui', 'pouo', 'pouu', 'pov', 'pova', 'pove', 'povi', 'povo', 'povu', 'pow', 'powa', 'powe', 'powi', 'powo', 'powu', 'pox', 'poxa', 'poxe', 'poxi', 'poxo', 'poxu', 'poy', 'poya', 'poye', 'poyi', 'poyo', 'poyu', 'poz', 'poza', 'poze', 'pozi', 'pozo', 'pozu',
    'pub', 'puc', 'puca', 'puce', 'puci', 'puco', 'pucu', 'pud', 'puda', 'pude', 'pudi', 'pudo', 'pudu', 'pue', 'puea', 'puee', 'puei', 'pueo', 'pueu', 'pub', 'puba', 'pube', 'pubi', 'pubo', 'pubu', 'puc', 'puca', 'puce', 'puci', 'puco', 'pucu', 'pud', 'puda', 'pude', 'pudi', 'pudo', 'pudu', 'pue', 'puea', 'puee', 'puei', 'pueo', 'pueu', 'puf', 'pufa', 'pufe', 'pufi', 'pufo', 'pufu', 'pug', 'puga', 'puge', 'pugi', 'pugo', 'pugu', 'puh', 'puha', 'puhe', 'puhi', 'puho', 'puhu', 'pui', 'puia', 'puie', 'puii', 'puio', 'puiu', 'puj', 'puja', 'puje', 'puji', 'pujo', 'puju', 'pup', 'pupa', 'pupe', 'pupi', 'pupo', 'pupu', 'pul', 'pula', 'pule', 'puli', 'pulo', 'pulu', 'pum', 'puma', 'pume', 'pumi', 'pumo', 'pumu', 'pun', 'puna', 'pune', 'puni', 'puno', 'punu', 'puo', 'puoa', 'puoe', 'puoi', 'puoo', 'puou', 'pup', 'pupa', 'pupe', 'pupi', 'pupo', 'pupu', 'puq', 'puqa', 'puqe', 'puqi', 'puqo', 'puqu', 'pur', 'pura', 'pure', 'puri', 'puro', 'puru', 'pus', 'pusa', 'puse', 'pusi', 'puso', 'pusu', 'put', 'puta', 'pute', 'puti', 'puto', 'putu', 'puu', 'puua', 'puue', 'puui', 'puuo', 'puuu', 'puv', 'puva', 'puve', 'puvi', 'puvo', 'puvu', 'puw', 'puwa', 'puwe', 'puwi', 'puwo', 'puwu', 'pux', 'puxa', 'puxe', 'puxi', 'puxo', 'puxu', 'puy', 'puya', 'puye', 'puyi', 'puyo', 'puyu', 'puz', 'puza', 'puze', 'puzi', 'puzo', 'puzu'
  ];
  const resultsByLetter = {};

  for (const letter of letters) {
    console.log(`\n🔍 Starting letter: ${letter}`);
    let pageNum = 1;
    const results = [];

    while (true) {
      const url = `https://www.canada411.ca/search/si-alph/${pageNum}/${letter}/Vancouver+BC/`;
      console.log(`Scraping ${url}`);

      const data = await scrapePageWithRetry(page, url);
      if (!data.length) {
        console.log(`No more results for ${letter} at page ${pageNum}. Moving to next letter.`);
        break;
      }

      try {
        await page.waitForSelector('.ypalert.ypalert--warning', { timeout: 5000 });

        const warningText = await page.$eval('.ypalert.ypalert--warning', el => el.innerText.trim());
        console.log('⚠️ Warning found:', warningText);
        const re = new RegExp("We didn't find any residential listings, but we found business listings matching");
        if (re.test(warningText)) {
          break;
        }
      } catch (e) {
        console.log('✅ No warnings.');
      }


      results.push(...data);
      console.log(`✅ ${data.length} entries added for letter ${letter} page ${pageNum}`);

      pageNum += 1;
      await sleep(1000 + Math.random() * 5);
    }

    resultsByLetter[letter] = results;

    // Save results to CSV
    const csvPath = path.resolve(__dirname, `./output/${letter}_Vancouver_BC_entries_${results.length}.csv`);
    const csvWriter = createCsvWriter({
      path: csvPath,
      header: [
        { id: 'name', title: 'Name' },
        { id: 'address', title: 'Address' },
        { id: 'phone', title: 'Phone' }
      ]
    });

    await csvWriter.writeRecords(results);
    console.log(`\n✅ Done! ${results.length} total entries saved`);
  }

  await browser.close();

  // Write out a JSON file mapping each letter to its results

  console.log('All done! Results saved');
})();